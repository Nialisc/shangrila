; Variables
(defpoll time
  :interval "5s"
  :initial "--:--"
  `date +%H:%M`
)

(defpoll date
  :interval "1m"
  :initial "--/--"
  `date +%d/%m`
)

; Widgets
(defwidget wrapper []
  (box
    :class "wrapper"
    (box :halign "start" (children :nth 0))
    (box :halign "center" (children :nth 1))
    (box :halign "end" (children :nth 2))
  )
)

; Widgets
(defwidget section []
  (box
    :class "section"
    :spacing 15
    (children)
  )
)

(defwidget item [name label value]
  (box
    :class "item ${name}"
    (box :class "label ${name}" label)
    (box :class "value ${name}" value)
  )
)

(defwidget content []
  (wrapper
    (section
      (item :name "cpu" :label "" :value "${round(EWW_CPU.avg, 0)}%")
      (item :name "memory" :label "" :value "${round(EWW_RAM.used_mem_perc, 0)}%")
    )
    (section
      (item :name "time" :label "" :value "${time}")
    )
    (section
      (item :name "battery" :label "" :value "${EWW_BATTERY.BAT1.capacity}%")
      (item :name "date" :label "" :value "${date}")
    )
  )
)

; Bars
(defwindow bar
  :monitor 0
  :class "bar"
  :geometry (geometry :x "0%"
    :y "10px"
    :width "99%"
    :height "30px"
  :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :exclusive true
  :wm-ignore false
  (content)
)

(defwindow zen_bar
  :monitor 0
  :class "bar zen"
  :geometry (geometry :x "0%"
    :y "0%"
    :width "100%"
    :height "30px"
  :anchor "top center")
  :stacking "fg"
  :reserve (struts :distance "40px" :side "top")
  :windowtype "dock"
  :exclusive true
  :wm-ignore false
  (content)
)
